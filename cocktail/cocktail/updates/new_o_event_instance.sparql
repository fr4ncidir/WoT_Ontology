#                                      _               _
#     _ __   _____      __  ___  _   _| |_ _ __  _   _| |_     _____   _____ _ __
#    | '_ \ / _ \ \ /\ / / / _ \| | | | __| '_ \| | | | __|   / _ \ \ / / _ \ '_ \
#    | | | |  __/\ V  V / | (_) | |_| | |_| |_) | |_| | |_   |  __/\ V /  __/ | | |
#    |_| |_|\___| \_/\_/___\___/ \__,_|\__| .__/ \__,_|\__|___\___| \_/ \___|_| |_|
#                     |_____|             |_|            |_____|
#     _       _           _
#    | |_    (_)_ __  ___| |_ __ _ _ __   ___ ___
#    | __|   | | '_ \/ __| __/ _` | '_ \ / __/ _ \
#    | |_    | | | | \__ \ || (_| | | | | (_|  __/
#     \__|___|_|_| |_|___/\__\__,_|_| |_|\___\___|
#       |_____|
#

NEW_OUTPUT_EVENT_INSTANCE:
    sparql: "
        delete {
            ?event wot:hasEventInstance ?oldEInstance.
            ?oldEInstance   rdf:type wot:EventInstance; 
                            wot:occurredAt ?oldTS;
                            wot:hasOutputData ?oldOData.
            ?oldOData   dul:hasDataValue ?oldValue;
                        wot:hasOutputDataSchema ?oldDS}
        insert {
            ?event wot:hasEventInstance ?newEInstance.
            ?newEInstance   rdf:type wot:EventInstance;
                            wot:occurredAt ?newTS;
                            wot:hasOutputData ?newOData.
            ?newOData   dul:hasDataValue ?newValue;
                        wot:hasOutputDataSchema ?newDS}
        where {
            ?event rdf:type wot:Event.
            optional {
                ?event wot:hasEventInstance ?oldEInstance.
                ?oldEInstance   rdf:type wot:EventInstance; 
                                wot:occurredAt ?oldTS;
                                wot:hasOutputData ?oldOData.
                ?oldOData   dul:hasDataValue ?oldValue;
                            wot:hasOutputDataSchema ?oldDS}
            bind (now() as ?newTS)
        }
        "
    forcedBindings:
        event:
            type: uri
            value: ""
        newEInstance:
            type: uri
            value: ""
        newOData:
            type: uri
            value: ""
        newValue:
            type: literal
            value: ""
        newDS:
            type: uri
            value: ""
        
